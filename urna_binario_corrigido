.data
newline: .asciiz "\n" # 0x0A 
ENCERRAR: .word 12345  # 0x00003039 (12345 em hexadecimal)

# Strings dos candidatos
candidato1: .asciiz "C1\n" # 0x43, 0x31, 0x0A
candidato2: .asciiz "C2\n" # 0x43, 0x32, 0x0A
candidato3: .asciiz "C3\n" # 0x43, 0x33, 0x0A

# Array de endereços dos nomes dos candidatos
candidatos: .word candidato1, candidato2, candidato3

votos: .word 0, 0, 0 # C1, C2, C3

msg_digite_voto: .asciiz "Digite seu voto (0-3): \n"
msg_confirmar: .asciiz "Aperte confirmar (C): \n"
confirma: .byte 'C'
msg_resultado: .asciiz "\nResultado da votação:\n"

.text
.globl main
main:
    0011 1101 0001 0000 1111 1111 1111 1111 # lui $t1, 0xFFFF
    0011 0111 0101 0001 1111 1111 1111 1111 # ori $t1, $t1, 0xFFFF

loop: 
    0011 1101 0010 0000 0000 0000 0000 0000 # lui $v0, 0x0000
    0011 0111 0100 0010 0000 0000 0000 0100 # ori $v0, $v0, 0x0004
    001111 00000 00100 upper_16_bits # lui $a0, parte alta do endereço de msg_digite_voto
    001101 00100 00100 lower_16_bits # ori $a0, $a0, parte baixa do endereço de msg_digite_voto
    0000 0000 0000 0000 0000 0000 0000 1100 # syscall
    
    0011 1101 0010 0000 0000 0000 0000 0000 # li $v0, 5
    0011 0111 0100 0010 0000 0000 0000 0101
    0000 0000 0000 0000 0000 0000 0000 1100 # syscall
    0000 0010 0100 1001 0000 0000 0010 0001 # move $t1, $v0

    100011 00000 01000 1000000000010000 # lw $t0, ENCERRAR
    000100 01000 01001 0000000000000100 # beq $t0, $t1, end_loop

    000000 01001 00000 00001 00000 101010  # slt $at, $t1, $zero
    000101 00001 00000 0000 0000 0000 0100 # bne $at, $zero, loop
    001010 01001 00001 0000 0000 0000 0101 # slti $at, $t1, 5
    000100 00001 00000 0000 0000 0000 0100 # beq $at, $zero, loop

    001111 00000 00010 0000 0000 0000 0100 # li $v0, 4
    001101 00010 00010 0000 0000 0000 0100
    001111 00000 00100 0001 0000 0000 0000 # la $a0, newline
    001101 00100 00100 0000 0000 0000 0000
    0000 0000 0000 0000 0000 0000 0000 1100 # syscall

    001111 00000 00010 0000 0000 0000 0100 # li $v0, 4
    001101 00010 00010 0000 0000 0000 0100
    001111 00000 00100 upper_16_bits # lui $a0, parte alta do endereço de msg_confirmar
    001101 00100 00100 lower_16_bits # ori $a0, $a0, parte baixa do endereço de msg_confirmar
    0000 0000 0000 0000 0000 0000 0000 1100 # syscall

    li $v0, 12
    syscall
    li $t2, 'C'
    bne $v0, $t2, loop

    sll $t2, $t1, 2
    la $t3, votos
    add $t3, $t3, $t2
    lw $t4, 0($t3)
    addi $t4, $t4, 1
    sw $t4, 0($t3)

    j loop

end_loop:
    li $v0, 4
    la $a0, msg_resultado
    syscall

    jal resultado

    li $v0, 10
    syscall

resultado:
    li $t0, 0
    li $t1, 3 # Número de candidatos

print_loop:
    beq $t0, $t1, end_print_loop

    # Carregar o endereço do nome do candidato a partir do array candidatos
    sll $t2, $t0, 2         # t2 = t0 * 4 (tamanho de palavra)
    la $t3, candidatos      # Carrega o endereço base do array de candidatos
    lw $a0, 0($t3)          # Carrega o endereço da string do candidato
    lw $a0, 0($t3)          # Carrega o endereço do ponteiro de string
    add $t3, $t3, $t2       # Adiciona o deslocamento do índice ao endereço base
    lw $a0, 0($t3)          # Carrega o ponteiro da string
    li $v0, 4               # Prepara syscall para imprimir string
    syscall

    # Imprimir os votos
    sll $t3, $t0, 2
    la $t4, votos
    add $t4, $t4, $t3
    lw $a0, 0($t4)
    li $v0, 1
    syscall

    # Imprimir quebra de linha
    li $v0, 4
    la $a0, newline
    syscall

    addi $t0, $t0, 1
    j print_loop

end_print_loop:
    jr $ra
